version: 2.1

jobs:
  build-and-test:
    docker:
      - image: circleci/python:3.9.2
        environment:
          TEST_DB_CONNECTION: postgresql://postgres:postgres@localhost:5432/chess-fast-test
          SECRET_KEY: test
      - image: circleci/postgres:13.2
        environment:
          POSTGRES_DB: chess-fast-test
          POSTGRES_PASSWORD: postgres
    resource_class: small
    steps:
      - checkout
      - restore_cache:
          key: v1-deps-{{ .Branch }}-{{ checksum "poetry.lock"}}
      - run:
          command: |
            sudo pip install poetry
            poetry config virtualenvs.path venv
            poetry install
      - save_cache:
          key: v1-deps-{{ .Branch }}-{{ checksum "poetry.lock"}}
          paths:
            - "venv"
      - run: poetry run mypy app
      - run: poetry run pytest --junitxml=test-results/pytest/test-result.xml
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: tr1
  build-image:
    environment:
      IMAGE_NAME: lucasroig/fast-api-chess-server
    docker:
      - image: circleci/buildpack-deps:stretch
    resource_class: small
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t $IMAGE_NAME:latest -f docker/dev.Dockerfile .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "DOCKER_HUB_KEY" | docker login -u "DOCKER_HUB_USER" --password-stdin
            docker push $IMAGE_NAME:latest
workflows:
  version: 2
  build-and-test:
    jobs:
      - build-and-test:
          name: build-and-test
      - build-image:
          requires: [build-and-test]
          filters:
            branches:
              only: circleci-project-setup
